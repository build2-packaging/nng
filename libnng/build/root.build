using c

h{*}: extension = h
c{*}: extension = c

# Assume headers are importable unless stated otherwise.
h{*}: c.importable = true

# The test target for cross-testing (running tests under Wine, etc).
test.target = $c.target

config [bool] config.libnng.elide_deprecated ?= false

# We can use rlimit to configure the stack size for systems
# that have too small defaults.  This is not used for Windows,
# which can grow thread stacks sensibly.  (Note that NNG can get
# by with a smallish stack, but application callbacks might require
# larger values if using aio completion callbacks.  TLS libraries may
# require larger stacks however.)
config [bool] config.libnng.set_stacksize ?= false

config [bool] config.libnng.enable_stats ?= false
config [uint64] config.libnng.resolve_concurrency ?= 0 # zero means "auto-detect"
config [uint64] config.libnng.num_taskq_threads ?= 0 # zero means "auto-detect"
config [uint64] config.libnng.max_taskq_threads ?= 16

# protocol options
config [bool] config.libnng.proto_bus0 ?= true
config [bool] config.libnng.proto_pair0 ?= true
config [bool] config.libnng.proto_pair1 ?= true
config [bool] config.libnng.proto_push0 ?= true
config [bool] config.libnng.proto_pull0 ?= true
config [bool] config.libnng.proto_pub0 ?= true
config [bool] config.libnng.proto_sub0 ?= true
config [bool] config.libnng.proto_req0 ?= true
config [bool] config.libnng.proto_rep0 ?= true
config [bool] config.libnng.proto_surveyor0 ?= true
config [bool] config.libnng.proto_respondent0 ?= true

# transport options
config [bool] config.libnng.transport_inproc ?= true
config [bool] config.libnng.transport_ipc ?= true
config [bool] config.libnng.transport_tcp ?= true
config [bool] config.libnng.transport_tls ?= false
config [bool] config.libnng.transport_ws ?= true

# supplemental options
config [bool] config.libnng.supp_base64 ?= true
config [bool] config.libnng.supp_http ?= true
config [bool] config.libnng.supp_sha1 ?= true
config [bool] config.libnng.supp_tls ?= false
config [bool] config.libnng.supp_websocket ?= true

# can be either 'none', 'mbedtls' or 'wolfssl'
config [string] config.libnng.tls_engine ?= none
